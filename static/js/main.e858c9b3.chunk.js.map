{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","renderTitle","goods","length","type","className","onClick","removeAllGoods","slice","join","selectGood","good","setState","removeGood","goodToRemove","filter","this","map","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,YAAc,SAACC,GACb,OAAQA,EAAMC,QACZ,KAAM,EACJ,MAAO,qBACT,KAAM,EACJ,OACE,+CACMD,EADN,iBAEE,wBACEE,KAAK,SACLC,UAAU,mBACVC,QAAS,kBAAM,EAAKC,kBAHtB,sBASN,QACE,OACE,+CACML,EAAMM,MAAM,EAAGN,EAAMC,OAAS,GAAGM,KAAK,MAD5C,gBACyDP,EAAMA,EAAMC,OAAS,GAD9E,kBAEE,wBACEC,KAAK,SACLC,UAAU,mBACVC,QAAS,kBAAM,EAAKC,kBAHtB,wB,EAYVG,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACb,GAAD,MACZ,CAAEC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BW,S,EAI9CE,WAAa,SAACC,GACZ,EAAKF,UAAS,SAACb,GAAD,MAAY,CACxBC,cAAeD,EAAMC,cAAce,QACjC,SAAAJ,GAAI,OAAIA,IAASG,U,EAMvBP,eAAiB,WACf,EAAKK,SAAS,CAAEZ,cAAe,M,4CAGjC,WACE,IAAQA,EAAkBgB,KAAKjB,MAAvBC,cAEAU,EAAwCM,KAAxCN,WAAYG,EAA4BG,KAA5BH,WAAYZ,EAAgBe,KAAhBf,YAEhC,OACE,sBAAKI,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,SACGJ,EAAYD,KAEf,oBAAIK,UAAU,YAAd,SACGR,EAAgBoB,KAAI,SAAAN,GACnB,OAAOX,EAAckB,SAASP,GAE1B,qBAAIN,UAAU,wCAAd,UACGM,EACA,MACD,wBACEP,KAAK,SACLC,UAAU,sDAIVC,QAAS,kBAAMO,EAAWF,IAN5B,uBAaF,qBAAIN,UAAU,gBAAd,UACGM,EACA,MACD,wBACEP,KAAK,SACLC,UAAU,sDAIVC,QAAS,kBAAMI,EAAWC,IAN5B,mC,GA1FAQ,IAAMC,WA6GTtB,IC9HfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e858c9b3.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  renderTitle = (goods: string[]) => {\n    switch (goods.length) {\n      case (0):\n        return 'No goods selected.';\n      case (1):\n        return (\n          <>\n            {`${goods} is selected.`}\n            <button\n              type=\"button\"\n              className=\"App__clearButton\"\n              onClick={() => this.removeAllGoods()}\n            >\n              Clear\n            </button>\n          </>\n        );\n      default:\n        return (\n          <>\n            {`${goods.slice(0, goods.length - 1).join(', ')} and ${goods[goods.length - 1]} are selected.`}\n            <button\n              type=\"button\"\n              className=\"App__clearButton\"\n              onClick={() => this.removeAllGoods()}\n            >\n              Clear\n            </button>\n          </>\n        );\n    }\n  };\n\n  selectGood = (good: string) => {\n    this.setState((state) => (\n      { selectedGoods: [...state.selectedGoods, good] }\n    ));\n  };\n\n  removeGood = (goodToRemove: string) => {\n    this.setState((state) => ({\n      selectedGoods: state.selectedGoods.filter(\n        good => good !== goodToRemove,\n      ),\n    }\n    ));\n  };\n\n  removeAllGoods = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    const { selectGood, removeGood, renderTitle } = this;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          {renderTitle(selectedGoods)}\n        </h1>\n        <ul className=\"App__list\">\n          {goodsFromServer.map(good => {\n            return selectedGoods.includes(good)\n              ? (\n                <li className=\"App__listItem App__listItem--selected\">\n                  {good}\n                  {' - '}\n                  <button\n                    type=\"button\"\n                    className=\"\n                      App__listItemButton\n                      App__listItemButton--toRemove\n                    \"\n                    onClick={() => removeGood(good)}\n                  >\n                    Remove\n                  </button>\n                </li>\n              )\n              : (\n                <li className=\"App__listItem\">\n                  {good}\n                  {' - '}\n                  <button\n                    type=\"button\"\n                    className=\"\n                      App__listItemButton\n                      App__listItemButton--toSelect\n                    \"\n                    onClick={() => selectGood(good)}\n                  >\n                    Select\n                  </button>\n                </li>\n              );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}